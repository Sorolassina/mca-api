"""1-Init Base

Revision ID: 74b74768839f
Revises: 
Create Date: 2025-05-15 14:42:24.104806

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '74b74768839f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('evenements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('titre', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date_debut', sa.DateTime(), nullable=False),
    sa.Column('date_fin', sa.DateTime(), nullable=False),
    sa.Column('lieu', sa.String(length=255), nullable=True),
    sa.Column('type_evenement', sa.Enum('FORMATION', 'ATELIER', 'CONFERENCE', 'SEMINAIRE', 'TABLE_RONDE', 'WORKSHOP', 'AUTRE', name='typeevenement'), nullable=False),
    sa.Column('statut', sa.Enum('PLANIFIE', 'EN_COURS', 'TERMINE', 'ANNULE', name='statutevenement'), nullable=False),
    sa.Column('capacite_max', sa.Integer(), nullable=True),
    sa.Column('animateur', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_evenements_id'), 'evenements', ['id'], unique=False)
    op.create_table('programmes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('date_debut', sa.Date(), nullable=False),
    sa.Column('date_fin', sa.Date(), nullable=False),
    sa.Column('lieu', sa.String(length=100), nullable=False),
    sa.Column('places_disponibles', sa.Integer(), nullable=False),
    sa.Column('places_totales', sa.Integer(), nullable=False),
    sa.Column('statut', sa.Enum('ACTIF', 'INACTIF', 'TERMINE', 'PLANIFIE', name='statutprogramme'), nullable=False),
    sa.Column('prix', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('besoins_evenement',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date_evenement', sa.Date(), nullable=False),
    sa.Column('nb_jours', sa.Integer(), nullable=True),
    sa.Column('lieu', sa.String(length=100), nullable=True),
    sa.Column('is_participant', sa.Boolean(), nullable=True),
    sa.Column('nom', sa.String(length=50), nullable=False),
    sa.Column('prenom', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('besoins_principaux', sa.Text(), nullable=False),
    sa.Column('attentes', sa.Text(), nullable=True),
    sa.Column('niveau_connaissance', sa.String(length=20), nullable=False),
    sa.Column('objectifs', sa.Text(), nullable=True),
    sa.Column('contraintes', sa.Text(), nullable=True),
    sa.Column('rgpd_consent', sa.Boolean(), nullable=False),
    sa.Column('rgpd_consent_date', sa.Date(), nullable=True),
    sa.Column('date_soumission', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['evenements.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('preinscriptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('programme_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('nom', sa.String(length=50), nullable=False),
    sa.Column('prenom', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('telephone', sa.String(length=20), nullable=False),
    sa.Column('date_naissance', sa.Date(), nullable=False),
    sa.Column('adresse', sa.String(length=200), nullable=False),
    sa.Column('code_postal', sa.String(length=5), nullable=False),
    sa.Column('ville', sa.String(length=100), nullable=False),
    sa.Column('situation_professionnelle', sa.Enum('DEMANDEUR_EMPLOI', 'SALARIE', 'INDEPENDANT', 'ETUDIANT', 'AUTRE', name='situationprofessionnelle'), nullable=False),
    sa.Column('niveau_etude', sa.Enum('SANS_DIPLOME', 'CAP_BEP', 'BAC', 'BAC_PLUS_2', 'BAC_PLUS_3', 'BAC_PLUS_4', 'BAC_PLUS_5', 'SUPERIEUR', name='niveauetude'), nullable=False),
    sa.Column('projet_entrepreneurial', sa.Text(), nullable=True),
    sa.Column('rgpd_consent', sa.Boolean(), nullable=False),
    sa.Column('rgpd_consent_date', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('date_soumission', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['evenements.id'], ),
    sa.ForeignKeyConstraint(['programme_id'], ['programmes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('programme_objectifs',
    sa.Column('id', sa.Integer(), server_default=sa.text("nextval('programme_objectifs_id_seq')"), autoincrement=True, nullable=False),
    sa.Column('programme_id', sa.Integer(), nullable=False),
    sa.Column('objectif', sa.String(), nullable=False),
    sa.Column('ordre', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['programme_id'], ['programmes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('programme_prerequis',
    sa.Column('id', sa.Integer(), server_default=sa.text("nextval('programme_prerequis_id_seq')"), autoincrement=True, nullable=False),
    sa.Column('programme_id', sa.Integer(), nullable=False),
    sa.Column('prerequis', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['programme_id'], ['programmes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('satisfaction_evenement',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('nom', sa.String(length=50), nullable=True),
    sa.Column('prenom', sa.String(length=50), nullable=True),
    sa.Column('note_globale', sa.Integer(), nullable=False),
    sa.Column('points_positifs', sa.Text(), nullable=True),
    sa.Column('points_amelioration', sa.Text(), nullable=True),
    sa.Column('recommander', sa.Boolean(), nullable=False),
    sa.Column('commentaires', sa.Text(), nullable=True),
    sa.Column('opinion_evaluateur', sa.Text(), nullable=True),
    sa.Column('rgpd_consent', sa.Boolean(), nullable=False),
    sa.Column('rgpd_consent_date', sa.Date(), nullable=True),
    sa.Column('date_soumission', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['evenements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emargements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('besoin_id', sa.Integer(), nullable=True),
    sa.Column('evenement_id', sa.Integer(), nullable=False),
    sa.Column('signature_image', sa.String(), nullable=False),
    sa.Column('date_signature', sa.DateTime(), nullable=True),
    sa.Column('mode_signature', sa.String(), nullable=False),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('is_validated', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['besoin_id'], ['besoins_evenement.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['evenement_id'], ['evenements.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inscriptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('programme_id', sa.Integer(), nullable=False),
    sa.Column('preinscription_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('nom', sa.String(length=50), nullable=False),
    sa.Column('prenom', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('telephone', sa.String(length=20), nullable=False),
    sa.Column('date_naissance', sa.Date(), nullable=False),
    sa.Column('adresse', sa.String(length=200), nullable=False),
    sa.Column('code_postal', sa.String(length=5), nullable=False),
    sa.Column('ville', sa.String(length=100), nullable=False),
    sa.Column('situation_professionnelle', sa.Enum('DEMANDEUR_EMPLOI', 'SALARIE', 'INDEPENDANT', 'ETUDIANT', 'AUTRE', name='situationprofessionnelle_insc'), nullable=False),
    sa.Column('niveau_etude', sa.Enum('SANS_DIPLOME', 'CAP_BEP', 'BAC', 'BAC_PLUS_2', 'BAC_PLUS_3', 'BAC_PLUS_4', 'BAC_PLUS_5', 'SUPERIEUR', name='niveauetude_insc'), nullable=False),
    sa.Column('projet_entrepreneurial', sa.Text(), nullable=True),
    sa.Column('rgpd_consent', sa.Boolean(), nullable=False),
    sa.Column('rgpd_consent_date', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('date_inscription', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['evenements.id'], ),
    sa.ForeignKeyConstraint(['preinscription_id'], ['preinscriptions.id'], ),
    sa.ForeignKeyConstraint(['programme_id'], ['programmes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('inscriptions')
    op.drop_table('emargements')
    op.drop_table('satisfaction_evenement')
    op.drop_table('programme_prerequis')
    op.drop_table('programme_objectifs')
    op.drop_table('preinscriptions')
    op.drop_table('besoins_evenement')
    op.drop_table('programmes')
    op.drop_index(op.f('ix_evenements_id'), table_name='evenements')
    op.drop_table('evenements')
    # ### end Alembic commands ###
